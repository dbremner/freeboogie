 . Fix type-checking in "old" mode by a bit of type inference.
 . Test typechecker thoroughly.
 . Perhaps introduce dummy names where the user doesn't provide one
   instead of carrying nulls around, which are hard to track.
 . Write an ant target that runs FindBugs.
 . Does ImplementationChecker treat type vars correctly?
 . The comments and code disagree for TypeChecker.checkExact
 . Check that everything in the test "functional/parser" typechecks
   in "old" mode
 . Finish passivate; now you can use fancy generics to deal with arrays
 . Desugar dependent types in assumes/asserts
 . Desugar function calls into assumes/asserts (remember that free is special)
 . Desugar specs into assumes/asserts (introduces two? new blocks)
 . Transform BoogiePL expressions into SmtTerms (SmtTermBuilder)
   Take care of arrays (does the prover know about arrays?)
 . Extract sharing in SimplifyProver, or use `flet' for z3
 . When making SmtTerms do small simplifications for "and", "or"
   (such as skip "TRUE", respectively "FALSE"; and return
   neutral element when there are no operands)
 . Cut out loops
 . Make flowgraph reducible
 . Simple interface to parse from strings
 . Support for explicit specialization in typechecker

vim:spell:ts=3:sw=3:fdm=manual:
