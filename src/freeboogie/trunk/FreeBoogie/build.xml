<!-- 
  When modifying this file please make sure that:
   - All generated files are removed by the "clean" target.
   - Do *not* use tabs.
-->

<project name="FreeBoogie" default="dist" basedir=".">
  <description>infrastructure for handling Boogie code</description>

  <!-- custom tasks -->
  <!-- Assuming an Ubuntu distribution with packages checkstyle, antlr,
    and a few others -->
  <taskdef
    resource="checkstyletask.properties"
    classpath="/usr/share/java/checkstyle.jar:/usr/share/java/antlr.jar:/usr/share/java/commons-beanutils.jar:/usr/share/java/commons-collections.jar:/usr/share/java/commons-logging.jar" />

  <!-- set global properties for this build -->
  <property name="debug" value="yes" />
  <property name="version" value="0.1"/>
  <property name="genericutils-jar" value="genericutils-0.0.jar"/>
  <property name="antlr-jar" value="antlr-runtime-3.1.3.jar" />
  <property name="astgen-jar" value="astgen-0.1.jar"/>
  <property name="ast-dir" location="src/freeboogie/ast" />
  <property name="parser-dir" location="src/freeboogie/parser" />
  <property name="junit_src" location="test/junit" />
  <property name="junit_reports" location="test/junit/reports"/>
  <path id="classpath">
    <fileset dir="lib" includes="*.jar" />
    <pathelement path="classes"  />
  </path>

  <!-- code generation and related -->
  <target name="generate_ast" depends="clean_ast" 
    description="generates AST">
    <mkdir dir="classes" />
    <java fork="yes" dir="${ast-dir}" jar="lib/${astgen-jar}">
      <arg value="fb.ag" />
      <arg value="abstract_classes.tpl" />
      <arg value="normal_classes.tpl" />
      <arg value="evaluator.tpl" />
      <arg value="transformer.tpl" />
      <arg value="substitutor.tpl" />
      <arg value="html.tpl" />
      <arg value="list.tpl" />
    </java>
  </target>

  <target name="generate_ast_picture" depends="generate_ast">
    <exec dir="${ast-dir}" executable="dot">
      <arg value="-Tgif" />
      <arg value="hierarchy.dot" />
      <arg value="-o" />
      <arg value="hierarchy.gif" />
    </exec>
  </target>

  <target name="generate_parser">
    <java fork="yes" dir="${parser-dir}" classname="org.antlr.Tool">
      <classpath refid="classpath" />
      <arg value="Fb.g" />
    </java>
  </target>

  <!-- Compilation and documentation targets -->
  <target name="compile_ast" depends="generate_ast"
          description="compiles the AST">
    <javac srcdir="${ast-dir}" destdir="classes"
           optimize="yes" debug="${debug}">
      <classpath refid="classpath" />
      <compilerarg value="-Xlint:all" />
    </javac>
  </target>

  <target name="compile_parser" depends="generate_parser,compile_ast"
          description="compiles the parser with warnings turned off">
    <javac srcdir="${parser-dir}" sourcepath="src" destdir="classes" 
           optimize="yes" debug="no">
      <classpath refid="classpath" /> 
    </javac>
  </target>

  <target name="compile" depends="compile_parser"
    description="compile the source ">
    <javac srcdir="src" destdir="classes" 
           optimize="yes" debug="${debug}">
      <classpath refid="classpath" /> 
      <compilerarg value="-Xlint:all" />
    </javac>
  </target>
  
  <target name="doc" description="generate javadoc" 
    depends="generate_ast,generate_parser">
    <javadoc destdir="docs/api" sourcepath="src">
      <package name="freeboogie.*" />
      <classpath refid="classpath" />
    </javadoc>
  </target>

  <!-- Distribution -->

  <target
      name="dist"
      depends="compile"
      description="generate the distribution">
    <mkdir dir="dist" />
    <mkdir dir="dist/lib" />
    <jar 
        jarfile="dist/freeboogie-${version}.jar"
        basedir="classes">
      <manifest>
        <attribute name="Main-Class" value="freeboogie.Main" />
        <attribute name="Class-Path" 
          value="lib/${antlr-jar} lib/${genericutils-jar}" />
      </manifest>
    </jar>
    <copy file="lib/${antlr-jar}" todir="dist/lib" />
    <copy file="lib/${genericutils-jar}" todir="dist/lib" />
  </target>
  
 
  <!-- Test targets -->

  <target name="compile_junit" depends="compile" 
    description="compile the junit tests ">
    <javac srcdir="${junit_src}" destdir="classes" 
           optimize="yes" debug="${debug}">
      <classpath refid="classpath" /> 
      <compilerarg value="-Xlint:all" />
    </javac>
  </target>


  <target name="junit_test" depends="compile_junit" 
    description="run the junit tests ">
     <mkdir dir="${junit_reports}"/>
     <junit printsummary="yes" haltonfailure="yes">
     <classpath refid="classpath" />
     <formatter type="plain"/>

      <batchtest fork="yes" todir="${junit_reports}">
        <fileset dir="${junit_src}">
          <include name="**/*.java"/>
        </fileset>
      </batchtest>
    </junit>
   </target>

  <target name="functional_test" depends="compile" description="run functional tests">
    <exec executable="test/functional/test" dir="test/functional" resolveexecutable="true" />
  </target>

  <target name="test" depends="junit_test,functional_test" description="run all tests"></target>

  <!-- Static analyzes -->
  <target name="style">
    <checkstyle config="style.xml">
      <fileset dir="src">
         <include name="**/*.java"/>
         <exclude name="**/parser/*"/>
         <exclude name="**/ast/*"/>
      </fileset>
      <classpath refid="classpath"/>
    </checkstyle>
  </target>

  <!-- Cleanup targets -->
  <target name="clean_ast" description="removes AST generated files">
    <delete>
      <fileset dir="${ast-dir}" includesfile="${ast-dir}/generated.list"/>
    </delete>
  </target>

  <target name="clean" depends="clean_ast" description="clean up">
    <delete dir="classes" />
    <delete dir="dist" />
    <delete dir="docs/api" />
    <delete>
      <!-- ANTLR generated files -->
      <fileset dir="src/freeboogie/parser" includes="FbParser.java" />
      <fileset dir="src/freeboogie/parser" includes="FbLexer.java" />
      <fileset dir="src/freeboogie/parser" includes="Fb.tokens" />
      <fileset dir="src/freeboogie/parser" includes="*.gl" />
    </delete>
    <delete includeEmptyDirs="true" quiet="true">
      <!-- files generated by testing -->
      <fileset dir="test/functional" includes="**/diff.*" />
      <fileset dir="test/functional" includes="**/out" />
      <fileset dir="test/functional" includes="**/err" />
      <fileset dir="test/functional" includes="**/*.log" />
      <fileset dir="test/custom/parser" includes="*.lex" />
      <fileset dir="${junit_reports}" includes="**/*" />
    </delete>
    <defaultexcludes remove="**/*~" />
    <delete>
      <!-- editor leftovers -->
      <fileset dir="" includes="**/*~"/>
      <fileset dir="" includes="**/semantic.cache" />
    </delete>
    <delete>
      <!-- TeX leftovers -->
      <fileset dir="" includes="**/*.aux" />
      <fileset dir="" includes="**/*.log" />
    </delete>
    <defaultexcludes default="true" />
  </target>
</project>

