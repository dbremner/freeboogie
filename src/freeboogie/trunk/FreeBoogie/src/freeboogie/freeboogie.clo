NAME::
  FbCli

ARGS::
  LogFile :{"--log-file"} :{file} 
    :"Specify the file where logging is done. If the file does not exist
      it is crated; if the file does exist the new log messages are appended."
  LogCategories :{"--log-categories"} :{enum-list} 
    :[choices="foo"]
    :"Specify the logging categories that should be enabled. Use a comma
      separated list. By default all categories are disabled."
  LogLevel :{"--log-level"} :{enum} 
    :[choices="SEVERE,WARNING,INFO,CONFIG,FINE,FINER,FINEST"]
    :"how much information is logged"
  ReportOn :{"--report-on", "--out-categories"} :{enum-list}
    :[choices="foo"]
    :"what is sent to stdout"
  ReportLevel :{"--report-level", "--out-level"} :{enum}
    :[choices="QUIET,NORMAL,VERBOSE,DEBUG", default="NORMAL"]
    :"how much information goes to stdout"
  PrettyPrint :{"--pretty-print"} 
    :"pretty print the files after type-checking"
  PrintSymbolTable :{"--print-symbol-table"}
    :"for each identifier definition, print its uses"
  PrintFlowgraphs :{"--print-flowgraphs"}
    :"for each implementation, print a dot-style description of the flowgraph"
  Passivate :{"--passivate"} :{enum}
    :[choices="NONE,OPTIM,ESCJAVA", default="NONE"]
    :"perform passivation"
  DesugarSpecs :{"--desugar-specs"}
    :"desugar preconditions/postconditions/modifies"
  DesugarCalls :{"--desugar-calls"}
    :"desugar calls into assert;havoc;assume"
  DesugarHavoc :{"--desugar-havoc"}
    :"desugar havoc into assignments from fresh variables"
  HavocLoopVariables :{"--havoc-loop-variables"}
    :"Havocs variables modified by a loop on entering that loop. If
      back-edges are removed later on then the verification is still
      sound. It is desirable to insert loop invariants to ensure
      completeness, but this is not done at the moment. On the bright
      side, this phase handles irreducible flow-graphs. The exact
      rules are: for each entry in a strongly connected component of
      the flowgraph there will be a havoc introduced for all the
      variables that are assigned in the component."
  CutLoops :{"--cut-loops"}
    :"cut backedges from the flowgraph"
  DesugarMaps :{"--desugar-maps"}
    :"desugars maps using select/update functions"
  BackwardCompatible :{"--backward-compatible"}
    :"processes BoogiePL"
  ProverCommandLine :{"--prover-command-line"} :{string}
    :"specify a custom command line to use to start a prover"
  Prover :{"--prover"} :{enum} 
    :[choices="simplify(SIMPLIFY),yes(YESMAN)", default="simplify"]
    :"specify which prover to use"
  Verify :{"--verify","-v"}
    :"verifies that the code is correct"
  UnshareVc :{"--unshare-vc"}
    :"extract common subexpression in the VC"
  VcMethod :{"--vc-method"} :{enum}
    :[choices="wp(WP),wpno(WPNO),sp(SP)", default="wp"]
    :"the method used to compute the VC"
  SeriesParallelCheck :{"--series-parallel-check"}
    :"checks if the flowgraphs are series-parallel"
  Files :{} :{file-list} :[mustExist,canBeDir="false",between=""]
    :"the files to process"
  Help :{"--help", "-h"}
    :"describe the command line interface"

FORMAT::
  (Option | Files)* | Help;

WHERE::
  Option:
    OutputOption |
    PrintOption |
    PhaseOption |
    ActionOption |
    ConfigOption;

  OutputOption: LogFile | LogCategories | LogLevel | ReportOn | ReportLevel;
  PrintOption: PrettyPrint | PrintSymbolTable | PrintFlowgraphs;
  PhaseOption: 
    PassivateOption |
    DesugarSpecs |
    DesugarCalls |
    DesugarHavoc |
    HavocLoopVariables |
    CutLoops |
    DesugarMaps |
    UnshareVc;
  ActionOption: Verify | SeriesParallelCheck;
  ConfigOption: BackwardCompatible | ProverCommandLine | Prover | VcMethod;

OVERRIDES::
// TODO: default command line for various provers
//  {$(Prover)==SIMPLIFY && !$(ProverCommandLine?)}
